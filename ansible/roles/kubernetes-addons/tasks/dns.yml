---
- name: DNS | Assures {{ kube_addons_dir }}/dns dir exists
  file: path={{ kube_addons_dir }}/dns state=directory

- name: DNS | Assures local dns addon dir exists
  local_action: file
    path={{ local_temp_addon_dir }}/dns
    state=directory
  sudo: no

- name: DNS | Download yaml files from Kubernetes repo
  local_action: copy
    src="{{ item }}.in"
    dest="{{ local_temp_addon_dir }}/dns/{{ item }}.j2"
    force=yes
  sudo: no
  changed_when: false
  with_items:
  - skydns-rc.yaml
  - skydns-svc.yaml

- name: DNS | Convert pillar vars to ansible vars for yaml files
  local_action: replace
    dest="{{ local_temp_addon_dir }}/dns/{{ item }}.j2"
    regexp="pillar\[\'(\w*)\'\]"
    replace="\1"
  sudo: no
  changed_when: false
  with_items:
  - skydns-rc.yaml
  - skydns-svc.yaml

- name: DNS | Replace amd64 with the right platform arch
  local_action: replace
    dest="{{ local_temp_addon_dir }}/dns/{{ item }}.j2"
    regexp="amd64"
    replace={{ ansible_machine }}
  sudo: no
  changed_when: false
  with_items:
  - skydns-rc.yaml

- name: DNS | Install Template from converted saltfiles
  template:
  args:
    src: "{{ local_temp_addon_dir }}/dns/{{ item }}.j2"
    dest: "{{ kube_addons_dir }}/dns/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
  - skydns-rc.yaml
  - skydns-svc.yaml
